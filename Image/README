This program is written in order to be able to reverse the color of the input uncompressed bmp input image file. To solve the program, I should first have a funtion to be able to create a temparary image file in the heap of my call stack so that I will be able to edit the image and copy it to the output. Also, I still need another funtion to free the memory spent by the image file so that there won't be any memory leak in the future. Then I will need to have another function to load the image from the input image to the piece of memory I reserved in the heap. Then I will need two more functions to invert the color and save the image to the output.
In the BMP_create function, I will use malloc to first reserve a piece of memory in the heap. Then I will copy the header from the input header file to the temporary image file in the heap. Then I will allocate memory for the data that I will use later. Then return the image file.
In the second function BMP_destroy, I will use free to free all the data in the image file and the address stored in the image structure.
In the third function BMP_load, I will first open the image file in a binary format to do image processing. Then I will use fread to read the input header file and the image data. I will check if I can read the image data. If I can't, a NULL pointer needs to be returned. Also, I will use checkValid and BMP_create function to check the vaildity of the input and create a input image structure. I will also use BMP_printheader to print the header information.
Then, in the BMP_invert function, I will just make image data = 255 - image_data to reverse the color.
And in the BMP_save function, I will use fwrite to write the header information and data file to the output file.
