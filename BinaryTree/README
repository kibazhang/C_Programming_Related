In this assignment, the main.c is the main function and helper.c and tree.c are the helper files, which contains several functions used to implement the main functionalities of the program.
The program can produce a binary tree based on the input files, which contains command 'r 5' meaning that remove 5 from the binary tree, or command 'i 5' meaning that insert 5 into the binary tree.
Then the program will print the binary tree into an output file in preOrder, inOrder, or postOrder.And the program will free all the functions used for the binary tree.
In the main function, main.c, there are three functions readTree, writeTree, and then destroyTree. Those functions will implement the basic functionalities of the program, and the program will first check whether the name of the input and output file are given or not, and then it will implement those functions.
In readTree function, there will be a recursive function first scan in all the possible inputs.Then if the command is 'r', it will call the Treedelete function. If the command is 'i', it will call the Treeinsert function.After all the inputs have been scaned in, the function will return the binary tree to the main function.
The Treedelete function will delete the node with the desired value. There are three cases. First, the node has no children. Then just delete the node. If the node has one child, then just copy the child to the node. And the delete the node. If the node has two children, then find the successor of the node, and swap the value of the two nodes. And then delete the successor.
The Treeinsert function will insert the desired value into the binary tree.If the value already exists, then don't change the tree.
In writeTree function, there will be a recursive function to scan in all the inputs.If the binary tree is empty, just create an empty file.If the tree is not empty, then just print the tree in three orders.
At last, the destroyTree function will free all the memory allocated by the tree recursively.
